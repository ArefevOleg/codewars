// ОПИСАНИЕ:
// В крокетном клубе Западного пригорода есть две категории членов: Senior и Open. Они хотели бы,
// чтобы вы помогли им заполнить анкету, в которой будет указано, в какую категорию они будут зачислены.
// Чтобы стать игроком старшей возрастной категории, игроку должно быть не менее 55 лет
// и его коэффициент форы должен превышать 7. В этом крокетном клубе коэффициент форы
// варьируется от -2 до +26; чем лучше игрок, тем ниже коэффициент форы.
// Ввод
// Входные данные будут состоять из списка пар. Каждая пара содержит информацию об одном
// потенциальном участнике. Информация состоит из целого числа, обозначающего возраст участника,
// и целого числа, обозначающего его физические недостатки.
// Выход
// Выходные данные будут состоять из списка строковых значений (в Haskell и C: Open или Senior),
// указывающих, должен ли соответствующий элемент быть помещен в категорию senior или open.
// input =  [[18, 20], [45, 2], [61, 12], [37, 6], [21, 21], [78, 9]]
// output = ["Open", "Open", "Senior", "Open", "Open", "Senior"]
// [[45, 12],[55,21],[19, -2],[104, 20]]),['Open', 'Senior', 'Open', 'Senior']

// [[3, 12],[55,1],[91, -2],[53, 23]]),['Open', 'Open', 'Open', 'Open']
// [[59, 12],[55,-1],[12, -2],[12, 12]]),['Senior', 'Open', 'Open', 'Open']

function openOrSenior(data) {
  const res = data.map(el => {
    if (el[0] >= 55 && el[1] > 7) {
      return "Senior"
    } else {
      return "Open"
    }
  })
  return res
  // return data.map(([age, handicap]) => age >= 55 && handicap > 7 ? 'Senior' : 'Open');
}

console.log(openOrSenior([[59, 12], [55, -1], [12, -2], [12, 12]]))