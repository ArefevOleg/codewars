//ОПИСАНИЕ:
// Суммируйте все номера данного массива ( cq. list ),
// за исключением самого высокого и самого низкого элементов ( по значению, а не по индексу! ).
// Самый высокий или самый низкий элемент соответственно - это отдельный элемент на каждом ребре,
// даже если их несколько с одинаковым значением.
// Обратите внимание на проверку вводимых данных.
// Example
// { 6, 2, 1, 8, 10 } => 16
// { 1, 1, 11, 2, 3 } => 6
// Проверка ввода Если вместо массива указано пустое значение (null, None, Nothing и т. д.),
// или данный массив представляет собой пустой список или список только с 1 элементом, верните 0.

// function sumArray(array) {
//   let sum = 0;
//   for (let i = 0; i < array.length; i++) {
//     sum += array[i];
//   }
//   if (!array || !Array.isArray(array)) {
//     return 0
//   } else if () {
//     return
//   } else {
//     const max = Math.max(...array);
//     const min = Math.min(...array);
//     const filteredArr = array.filter(num => num !== min && num !== max).reduce((a, b) => (a + b))
//     return filteredArr
//   }
// }
//
// console.log(sumArray([6, 2, 1, 8, 10]))